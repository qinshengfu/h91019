<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SecretkeyMapper">
	<resultMap type="Secretkey" id="SecretkeyResultMap">
		<id column="SECRETKEY_ID" property="SECRETKEY_ID"/>
		<result column="FILE_CONTENT" property="FILE_CONTENT"/>	
		<result column="SECRET_PASSWORD" property="SECRET_PASSWORD"/>	
		<result column="PRIVATEKEY" property="PRIVATEKEY"/>
		<result column="PUBLICKEY" property="PUBLICKEY"/>
		<result column="SECRET_FILE_NAME" property="SECRET_FILE_NAME"/>
		<result column="SERIAL" property="SERIAL"/>		
		<result column="CURRENCY" property="CURRENCY"/>	
		<result column="TRADE_TIME" property="TRADE_TIME"/>	
		<result column="ADDRESS" property="ADDRESS"/>	
		<result column="BALANCE" property="BALANCE"/>	
		<result column="HASH" property="HASH"/>	
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		"SYS_SECRETKEY"
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		"FILE_CONTENT",	
		"SECRET_PASSWORD",	
		"PRIVATEKEY",	
		"PUBLICKEY",	
		"SECRET_FILE_NAME",	
		"SERIAL",	
		"CURRENCY",	
		"TRADE_TIME",	
		"SECRETKEY_ID",
		"ADDRESS",
		"BALANCE",
		"HASH"
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
			#{FILE_CONTENT},	
			#{SECRET_PASSWORD},	
			#{PRIVATEKEY},	
			#{PUBLICKEY},	
			#{SECRET_FILE_NAME},	
			#{SERIAL},	
			#{CURRENCY},	
			#{TRADE_TIME},	
			#{SECRETKEY_ID},
			#{ADDRESS},
			#{BALANCE},
			#{HASH}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			"SECRETKEY_ID" = #{SECRETKEY_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
			set 
			<if test="TRADE_TIME!= null and TRADE_TIME != ''">
				"TRADE_TIME" = #{TRADE_TIME},
			</if>
			<if test="BALANCE !=null and BALANCE != ''">
				"BALANCE" = #{BALANCE},
			</if>
			<if test="HASH !=null and HASH != ''">
				"HASH" = #{HASH},
			</if>
			"SECRETKEY_ID" = "SECRETKEY_ID"
			where 
				"SECRETKEY_ID" = #{SECRETKEY_ID}
	</update>
	
	<!-- 修改 -->
	<update id="edit2" parameterType="pd">
		update
		<include refid="tableName"></include>
			set 
			<if test="TRADE_TIME!= null and TRADE_TIME != ''">
				"TRADE_TIME" = #{TRADE_TIME},
			</if>
			<if test="BALANCE !=null and BALANCE != ''">
				"BALANCE" = #{BALANCE},
			</if>
			<if test="HASH !=null and HASH != ''">
				"HASH" = #{HASH},
			</if>
			"SECRETKEY_ID" = "SECRETKEY_ID"
			where 
				"CURRENCY" = #{CURRENCY}
				 and
				"SERIAL" = #{SERIAL}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			"SECRETKEY_ID" = #{SECRETKEY_ID}
	</select>
	
	<!-- 通过账号、币种获取数据 -->
	<select id="findSERIAL" parameterType="pd" resultMap="SecretkeyResultMap">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			"CURRENCY" = #{CURRENCY}
			 and
			"SERIAL" = #{SERIAL}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and SERIAL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 								
		</if>
		<if test="pd.name!= null and pd.name != ''"><!-- 关键词检索 -->
			and CURRENCY = #{pd.name}								
		</if>
		order by TRADE_TIME desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			"SECRETKEY_ID" in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>